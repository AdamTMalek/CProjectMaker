#!/usr/bin/python3

import sys
import os
import re
import argparse


sys.path.append(os.path.join(os.path.dirname(__file__)))
import project
import module


def main():
    arg_parser = setup_arg_parser()
    args = arg_parser.parse_args()

    if not valid_name(args.name):
        print("The name " + args.name + " is not valid. Only alphanumerical characters are accepted.")
        return

    if args.directory and not args.module:
        print("Directory argument requires module argument to be preset as well")
        return

    if args.module:
        module.create_module(args.name, args.directory)
    elif args.rename:
        project.rename(args.rename, args.name)
    else:
        project.create_project(args.name)


def setup_arg_parser():
    """
    Set up the parser and all arguments supported by the program
    :return: ArgumentParser with supported arguments
    """
    arg_parser = argparse.ArgumentParser()
    arg_parser.add_argument("name", help="create a project with the given name if the module option (-m or --module)"
                                         " is not specified. The name must consist of only alphanumerical characters")
    module_group = arg_parser.add_argument_group()
    module_group.add_argument("-m", "--module", help="create a module (.c and .h files) with the specified name",
                              action="store_true")
    module_group.add_argument("-d", "--directory", help="create a directory for the module. "
                                                        "Note that this argument requires the module argument "
                                                        "to be preset as well",
                              action="store_true")
    arg_parser.add_argument("-r", "--rename", help="rename an existing project to [name]", metavar='old_name')
    return arg_parser


def valid_name(name):
    return not re.search(r"[^a-zA-Z0-9]+", name)


if __name__ == "__main__":
    main()
